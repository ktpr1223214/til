package main

import (
	"database/sql"
	"fmt"
	_ "github.com/go-sql-driver/mysql"
	"github.com/kelseyhightower/envconfig"
	"github.com/ktpr1223214/til/security/vulnerability/examples/vulnerable-sample-app/pkg/server"
	"log"
	"net/http"
)

type Config struct {
	Port int

	DBHost string
	DBPort int
	DBUser string
	DBPass string
	DB     string
}

func main() {
	var conf Config
	if err := envconfig.Process("vuln_app", &conf); err != nil {
		log.Fatal(err)
	}

	db, err := sql.Open("mysql", fmt.Sprintf("%s:%s@tcp(%s:%d)/%s?parseTime=true&loc=Asia%%2FTokyo", conf.DBUser, conf.DBPass, conf.DBHost, conf.DBPort, conf.DB))
	if err != nil {
		log.Fatal(err)
	}

	mux := http.NewServeMux()
	s := server.NewServer(mux, db)
	s.Routes()

	if err := s.Run(conf.Port); err != nil {
		log.Fatal(err)
	}
}
