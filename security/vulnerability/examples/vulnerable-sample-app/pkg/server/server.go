package server

import (
	"database/sql"
	"fmt"
	"github.com/gorilla/mux"
	"go.uber.org/zap"
	"net/http"
)

type server struct {
	db *sql.DB

	router *mux.Router
}

func NewServer(router *mux.Router, db *sql.DB, l *zap.Logger) *server {
	srv := &server{
		router: router,
		db:     db,
	}
	srv.routes(l)

	return srv
}

func (s *server) routes(l *zap.Logger) {
	s.router.Handle("/", s.index()).Methods(http.MethodGet)

	s.router.Handle("/login", s.getLogin()).Methods(http.MethodGet)
	s.router.Handle("/login", s.postLogin()).Methods(http.MethodPost)
	s.router.Handle("/logout", s.loginOnly(s.getLogout())).Methods(http.MethodGet)

	s.router.Handle("/welcome", s.loginOnly(s.welcome())).Methods(http.MethodGet)

	s.router.Handle("/hc", s.healthy()).Methods(http.MethodGet)

	s.router.Use(addRequestID, withLogRequest(l))
}

func (s *server) Run(port int) error {
	if err := http.ListenAndServe(fmt.Sprintf(":%d", port), s.router); err != nil {
		return err
	}
	return nil
}
